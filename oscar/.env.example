# OSCAR Agent Configuration Example
# Copy this file to .env and update with your actual values

# =============================================================================
# REQUIRED CONFIGURATION - Must be set for OSCAR to function
# =============================================================================

# Slack Configuration (Required)
SLACK_BOT_TOKEN=xoxb-your-bot-token-here
SLACK_SIGNING_SECRET=your-signing-secret-here

# AWS Configuration (Required)
AWS_REGION=us-east-1
AWS_ACCOUNT_ID=your-aws-account-id

# OSCAR Bedrock Agent Configuration (Required)
OSCAR_BEDROCK_AGENT_ID=your-bedrock-agent-id
OSCAR_BEDROCK_AGENT_ALIAS_ID=your-bedrock-agent-alias-id

# Authorization Configuration (Required)
# Comma-separated list of Slack user IDs authorized to use OSCAR
AUTHORIZED_MESSAGE_SENDERS=U091B0QH1QD,U032Q5N0HTM
# Comma-separated list of Slack channel IDs where OSCAR can operate
CHANNEL_ALLOW_LIST=C096MV7JZ0T,C09827S7CEB

# =============================================================================
# METRICS CONFIGURATION - Required for metrics functionality
# =============================================================================

# OpenSearch Configuration (Required for metrics)
OPENSEARCH_HOST=https://your-opensearch-endpoint.region.es.amazonaws.com
OPENSEARCH_REGION=us-east-1
OPENSEARCH_SERVICE=es
OPENSEARCH_DOMAIN_ARN=arn:aws:es:region:account:domain/your-domain
OPENSEARCH_DOMAIN_ACCOUNT=your-opensearch-account-id

# Cross-Account Role for OpenSearch Access (Required for metrics)
METRICS_ROLE_ARN=arn:aws:iam::your-opensearch-account:role/OpenSearchOscarAccessRole
METRICS_CROSS_ACCOUNT_ROLE_ARN=arn:aws:iam::your-opensearch-account:role/OpenSearchOscarAccessRole

# VPC Configuration for Lambda Functions (Required for metrics)
VPC_ID=vpc-your-vpc-id
SUBNET_IDS=subnet-id1,subnet-id2,subnet-id3
SECURITY_GROUP_ID=sg-your-security-group-id

# =============================================================================
# OPTIONAL CONFIGURATION - Has sensible defaults
# =============================================================================

# DynamoDB Table Names
SESSIONS_TABLE_NAME=oscar-agent-sessions
CONTEXT_TABLE_NAME=oscar-agent-context

# TTL Settings (in seconds)
DEDUP_TTL=300                    # Event deduplication TTL (5 minutes)
SESSION_TTL=3600                 # Session data TTL (1 hour)
CONTEXT_TTL=604800               # Context data TTL (7 days)

# Context Management
MAX_CONTEXT_LENGTH=3000          # Maximum context length in characters
CONTEXT_SUMMARY_LENGTH=500       # Context summary length in characters

# Agent Settings
AGENT_TIMEOUT=150                # Agent query timeout in seconds
AGENT_MAX_RETRIES=2              # Maximum retry attempts for failed queries

# Feature Flags
ENABLE_DM=true                   # Enable direct message support (true/false)

# Performance Configuration
HOURGLASS_THRESHOLD_SECONDS=45   # Time before showing hourglass reaction
TIMEOUT_THRESHOLD_SECONDS=180    # Maximum query processing time
MAX_WORKERS=50                   # Maximum thread pool workers
MAX_ACTIVE_QUERIES=50            # Maximum concurrent queries allowed
MONITOR_INTERVAL_SECONDS=15      # Query monitoring interval (seconds)

# Lambda Function Configuration
PYTHON_RUNTIME=python3.12        # Python runtime version
LAMBDA_TIMEOUT=150               # Lambda function timeout (seconds)
LAMBDA_MEMORY_SIZE=512           # Lambda function memory (MB)
ROUTER_TIMEOUT=150               # Router function timeout (seconds)
ROUTER_MEMORY_SIZE=1024          # Router function memory (MB)
METRICS_TIMEOUT=150              # Metrics function timeout (seconds)
METRICS_MEMORY_SIZE=512          # Metrics function memory (MB)

# Message Formatting
MESSAGE_PREVIEW_LENGTH=100       # Preview length for messages in logs
QUERY_PREVIEW_LENGTH=50          # Preview length for queries in logs
RESPONSE_PREVIEW_LENGTH=50       # Preview length for responses in logs

# Slack Handler Configuration
SLACK_HANDLER_THREAD_NAME_PREFIX=oscar-agent

# Communication Handler Configuration
BEDROCK_RESPONSE_MESSAGE_VERSION=1.0
BEDROCK_ACTION_GROUP_NAME=communication-orchestration

# Logging Configuration
LOG_LEVEL=INFO                   # DEBUG, INFO, WARNING, ERROR
MOCK_MODE=false                  # Enable mock mode for testing

# OpenSearch Query Configuration
REQUEST_TIMEOUT=30               # OpenSearch request timeout
MAX_RESULTS=50                   # Maximum results per query
OPENSEARCH_DEFAULT_QUERY_SIZE=100
OPENSEARCH_LARGE_QUERY_SIZE=1000
OPENSEARCH_REQUEST_TIMEOUT=30

# =============================================================================
# CHANNEL AND TEMPLATE CONFIGURATION - Optional with defaults
# =============================================================================

# Channel Mappings (Slack Channel IDs)
CHANNEL_MAPPING_RELEASE_MANAGER=C096MV7JZ0T
CHANNEL_MAPPING_TEST=C09827S7CEB
CHANNEL_MAPPING_3_2_0_RELEASE=C088XMSH4DA
CHANNEL_MAPPING_RILEY=C091EH1JKCL

# Default Channels for Message Templates
DEFAULT_CHANNEL_MISSING_RELEASE_NOTES=C096MV7JZ0T
DEFAULT_CHANNEL_CRITERIA_NOT_MET=C096MV7JZ0T
DEFAULT_CHANNEL_DOCUMENTATION_ISSUES=C096MV7JZ0T
DEFAULT_CHANNEL_MISSING_CODE_COVERAGE=C09827S7CEB
DEFAULT_CHANNEL_RELEASE_ANNOUNCEMENT=C096MV7JZ0T

# OpenSearch Index Names
OPENSEARCH_INTEGRATION_TEST_INDEX=opensearch-integration-test-results-*
OPENSEARCH_BUILD_RESULTS_INDEX=opensearch-distribution-build-results-*
OPENSEARCH_RELEASE_METRICS_INDEX=opensearch_release_metrics

# =============================================================================
# AGENT QUERY TEMPLATES - Optional, has built-in defaults
# =============================================================================

# Uncomment and customize these if you want to override the default templates
# AGENT_QUERY_ANNOUNCE=Send a release announcement message to channel {channel} using the release-announcement template for version {version} {rc_param}. Ensure the template is filled out correctly.
# AGENT_QUERY_ASSIGN_OWNER=Send a release owner assignment message to channel {channel} using the release-owner-assignment template for version {version} {rc_param}. Make sure to ping any relevant people and ensure the template is filled out correctly.
# AGENT_QUERY_REQUEST_OWNER=Send a request for release owner message to channel {channel} using the request-release-owner template for version {version} {rc_param}. Ensure the template is filled out correctly.
# AGENT_QUERY_RC_DETAILS=Send RC details message to channel {channel} using the rc-details template for version {version} {rc_param}. Ensure the template is filled out correctly.
# AGENT_QUERY_MISSING_NOTES=Send a missing release notes message to channel {channel} using the missing-release-notes template for version {version} {rc_param}. Ensure that relevant maintainers are pinged and the template is filled out correctly.
# AGENT_QUERY_INTEGRATION_TEST=Send an integration test status message to channel {channel} for version {version} {rc_param}. Format the response well.
# AGENT_QUERY_BROADCAST=Process the following user_query and broadcast the response to channel {channel}. Here is the user_query: {user_query}.

# =============================================================================
# LEGACY CONFIGURATION - Maintained for compatibility
# =============================================================================

# Legacy Knowledge Base ID (Phase 0 - still used in some components)
KNOWLEDGE_BASE_ID=your-knowledge-base-id

# Legacy Model Configuration
MODEL_ARN=arn:aws:bedrock:us-east-1::foundation-model/anthropic.claude-3-5-haiku-20241022-v1:0

# Legacy OpenSearch VPC Endpoint (Preserved here for if one uses VPC endpoints)
OPENSEARCH_VPC_ENDPOINT_ID=aos-your-endpoint-id
OPENSEARCH_VPC_ENDPOINT_URL=https://your-vpc-endpoint-url

# =============================================================================
# DEVELOPMENT AND TESTING
# =============================================================================

# Development Settings
# AWS_DEFAULT_REGION=us-east-1     # Alternative AWS region setting
# DISABLE_CONFIG_VALIDATION=false  # Disable config validation for testing
# DISABLE_METRICS_CONFIG_VALIDATION=false  # Disable metrics config validation

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================

# 1. REQUIRED vs OPTIONAL:
#    - REQUIRED: Must be set for basic OSCAR functionality
#    - METRICS: Required only if using metrics features
#    - OPTIONAL: Has sensible defaults, customize as needed

# 2. Slack Configuration:
#    - Bot tokens start with 'xoxb-'
#    - Get these from your Slack app configuration at api.slack.com
#    - User IDs start with 'U', Channel IDs start with 'C'

# 3. AWS Configuration:
#    - Region should match where your Bedrock agent is deployed
#    - Account ID is your 12-digit AWS account number

# 4. Bedrock Agent:
#    - Agent ID and Alias ID from AWS Bedrock console
#    - Agent must be deployed and active

# 5. OpenSearch (for metrics):
#    - Required only if using metrics functionality
#    - Cross-account access requires proper IAM role setup
#    - VPC configuration needed for Lambda to access OpenSearch

# 6. Performance Tuning:
#    - Increase timeouts for complex queries
#    - Adjust memory for Lambda functions based on usage
#    - Monitor CloudWatch logs to optimize settings

# 7. Security:
#    - Keep tokens and secrets secure
#    - Use least-privilege IAM roles
#    - Regularly rotate credentials

# 8. Boolean Values:
#    - Use 'true' or 'false' (lowercase)
#    - Any other value is treated as false

# 9. TTL Values:
#    - All TTL values are in seconds
#    - Shorter TTLs reduce storage costs but may impact performance

# 10. Channel and User IDs:
#     - Find these in Slack by right-clicking and copying links
#     - Channel IDs start with 'C', User IDs start with 'U'